name: Create Release

on:
  push:
    tags:
      - 'v*'  # Trigger on tags that match version format

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set version variables
        id: version
        run: |
          # Extract version with 'v' prefix for GitHub paths
          TAG_VERSION=${{ github.ref_name }}
          # Extract version without the 'v' prefix for script
          CLEAN_VERSION=$(echo $TAG_VERSION | sed 's/^v//')

          echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "clean_version=$CLEAN_VERSION" >> $GITHUB_OUTPUT

      - name: Set version in install.sh
        run: |
          # Replace the placeholder with actual version
          sed -i "s/__INSTALLER_DEVELOPMENT_BUILD__/${{ steps.version.outputs.clean_version }}/g" install.sh
          # Display the change for verification in workflow logs
          echo "Updated install.sh with version ${{ steps.version.outputs.clean_version }}"

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          mode: "HYBRID" # Include both PRs and direct commits
          configurationJSON: |
            {
              "template": "#{{CHANGELOG}}\n\n## Contributors\n#{{CONTRIBUTORS}}\n\n## Installation\n\nInstall this version with:\n```bash\n/bin/bash -c \"$(curl -fsSL https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.tag_version }}/install.sh)\"\n```\n\nLatest version can always be installed using:\n```bash\n/bin/bash -c \"$(curl -fsSL https://github.com/${{ github.repository }}/releases/latest/download/install.sh)\"\n```",
              "categories": [
                {
                  "title": "## ðŸ”„ Changes",
                  "labels": []
                }
              ],
              "pr_template": "- #{{TITLE}} (#{{NUMBER}}) by @#{{AUTHOR}}",
              "commit_template": "- #{{TITLE}} (#{{MERGE_SHA}}) by @#{{AUTHOR}}"
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: install.sh
          body: ${{ steps.build_changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
